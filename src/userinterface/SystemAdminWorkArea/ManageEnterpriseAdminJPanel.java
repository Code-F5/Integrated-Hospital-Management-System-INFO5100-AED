/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 * @author VIRAJ
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.*;
import Business.Network.Network;
import Business.Role.EnterpriseAdminRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private Employee employee;
    private UserAccountDirectory userAccountDirectory;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        txtUsername.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        pfPassword.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        pfReenterPassword.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        txtName.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEnterprise.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworks()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[4];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();
                    row[3] = enterprise.getEnterpriseType().getValue();

                    model.addRow(row);
                }
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblEnterprise.setRowSorter(sorter);
            }
        }
         TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        tblEnterprise.setRowSorter(sorter);
    }

    private void populateNetworkComboBox() {
        cbNetwork.removeAllItems();

        for (Network network : system.getNetworks()) {
            cbNetwork.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network network) {
        cbEnterprise.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            cbEnterprise.addItem(enterprise);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnterprise = new javax.swing.JTable();
        lblNetwork = new javax.swing.JLabel();
        cbNetwork = new javax.swing.JComboBox();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblEnterprise = new javax.swing.JLabel();
        cbEnterprise = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();
        btnBack = new javax.swing.JButton();
        pfReenterPassword = new javax.swing.JPasswordField();
        lblPasswordConfirm = new javax.swing.JLabel();
        lblManageEnterPrisePanel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        tblEnterprise.setBackground(new java.awt.Color(204, 204, 255));
        tblEnterprise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Username", "Enterprise Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEnterprise);

        add(jScrollPane1);
        jScrollPane1.setBounds(26, 62, 671, 88);

        lblNetwork.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        lblNetwork.setText("Network :");
        add(lblNetwork);
        lblNetwork.setBounds(88, 168, 70, 17);

        cbNetwork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNetworkActionPerformed(evt);
            }
        });
        add(cbNetwork);
        cbNetwork.setBounds(190, 170, 136, 21);

        lblUsername.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        lblUsername.setText("Username :");
        add(lblUsername);
        lblUsername.setBounds(81, 232, 80, 17);
        add(txtUsername);
        txtUsername.setBounds(190, 230, 136, 20);

        lblEnterprise.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        lblEnterprise.setText("Enterprise :");
        add(lblEnterprise);
        lblEnterprise.setBounds(70, 200, 90, 17);

        cbEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cbEnterprise);
        cbEnterprise.setBounds(190, 200, 136, 21);

        submitJButton.setBackground(new java.awt.Color(0, 153, 255));
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton);
        submitJButton.setBounds(170, 390, 80, 21);

        lblPassword.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        lblPassword.setText("Password :");
        add(lblPassword);
        lblPassword.setBounds(84, 268, 80, 17);
        add(txtName);
        txtName.setBounds(190, 348, 136, 20);

        lblName.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        lblName.setText("Name :");
        add(lblName);
        lblName.setBounds(110, 350, 50, 17);
        add(pfPassword);
        pfPassword.setBounds(190, 270, 136, 25);

        btnBack.setBackground(new java.awt.Color(0, 153, 255));
        btnBack.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(10, 11, 81, 25);
        add(pfReenterPassword);
        pfReenterPassword.setBounds(190, 309, 136, 20);

        lblPasswordConfirm.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        lblPasswordConfirm.setText("Confirm Password :");
        add(lblPasswordConfirm);
        lblPasswordConfirm.setBounds(30, 310, 130, 17);

        lblManageEnterPrisePanel.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        lblManageEnterPrisePanel.setForeground(new java.awt.Color(204, 0, 0));
        lblManageEnterPrisePanel.setText("MANAGE ENTERPRISE PANEL");
        add(lblManageEnterPrisePanel);
        lblManageEnterPrisePanel.setBounds(230, 10, 260, 25);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/admin4.gif"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(20, 170, 680, 310);
    }// </editor-fold>//GEN-END:initComponents

    private void cbNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNetworkActionPerformed

        Network network = (Network) cbNetwork.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }


    }//GEN-LAST:event_cbNetworkActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Enterprise enterprise = (Enterprise) cbEnterprise.getSelectedItem();

        String username = txtUsername.getText();
        Role role = null;
        String password = String.valueOf(pfPassword.getPassword());
        String rePassword = String.valueOf(pfReenterPassword.getPassword());
        String name = txtName.getText();

        if (username == null || username.equals("")) {
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUsername.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Username can't be empty");
            return;
        }
        if (password == null || password.equals("")) {
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            lblUsername.setForeground(Color.BLACK);
            pfPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Password can't be empty");
            return;
        }

        if (!passwordPatternCorrect()) {
            JOptionPane.showMessageDialog(null, "Password should be at least 6 Characters "
                    + "digits and a combination of number , uppercase letter, "
                    + "lowercase letter and Special characters are not allowed other than $, +, _");
            pfPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            return;
        }

        if (!password.equals(rePassword)) {
            JOptionPane.showMessageDialog(null, "Passwords don't match");
            pfPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            pfReenterPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassword.setForeground(Color.RED);
            lblPasswordConfirm.setForeground(Color.RED);
            return;
        }

        if (name == null || name.equals("")) {
            pfPassword.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            pfReenterPassword.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            lblPassword.setForeground(Color.BLACK);
            lblPasswordConfirm.setForeground(Color.BLACK);
            txtName.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblName.setForeground(Color.RED);
            JOptionPane.showMessageDialog(null, "Name can't be empty");
            return;
        } else {
            List<UserAccount> userAccountList = enterprise.getUserAccountDirectory().getUserAccountList();
            for (UserAccount userAccount : userAccountList) {
                if (userAccount.getUsername().equals(username)) {
                    JOptionPane.showMessageDialog(null, "username already taken!!");
                    txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
                    return;
                }
            }
            
            Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
            UserAccount userAccount = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new EnterpriseAdminRole());
            populateTable();

            lblPassword.setForeground(Color.BLACK);
            lblPasswordConfirm.setForeground(Color.BLACK);
            lblName.setForeground(Color.BLACK);
            txtName.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            pfPassword.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            pfReenterPassword.setBorder(BorderFactory.createLineBorder(Color.BLACK));
            txtName.setText("");
            pfPassword.setText("");
            pfReenterPassword.setText("");
            txtUsername.setText("");
        }

    }//GEN-LAST:event_submitJButtonActionPerformed

    private boolean passwordPatternCorrect() {
        Pattern p = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[$+_])(?=\\S+$).{6,}$");
        Matcher m = p.matcher(String.valueOf(pfPassword.getPassword()));
        boolean b = m.matches();
        return b;
    }


    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox cbEnterprise;
    private javax.swing.JComboBox cbNetwork;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblManageEnterPrisePanel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNetwork;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordConfirm;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JPasswordField pfReenterPassword;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTable tblEnterprise;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
